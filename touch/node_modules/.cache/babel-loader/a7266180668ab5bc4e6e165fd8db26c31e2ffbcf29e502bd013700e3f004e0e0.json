{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VICKY MISHRA\\\\Desktop\\\\my-touch-typing-app\\\\touch\\\\src\\\\Components\\\\Newlesson.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Navbar from './Navbar';\nimport Footer from './Footer';\nimport { motion } from 'framer-motion';\nimport useSound from 'use-sound';\nimport { user } from './Join';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Newlesson() {\n  _s();\n  let text = 'India, a diverse nation of rich heritage, mesmerizes with its vibrant cultures, breathtaking landscapes, and historical wonders like the Taj Mahal. From bustling cities to serene Himalayan peaks, it is a tapestry of traditions and modernity. Experience its spicy cuisine, intricate traditions, and warm hospitality that leave an indelible mark on every traveler.';\n  const [keyCounting, setkeyCounting] = useState(0);\n  const [writtenText, setwrittenText] = useState('');\n  const [accuracy, setAccuracy] = useState(0);\n  const [remainingTime, setRemainingTime] = useState(1 * 60); // 1 minutes in seconds\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [play] = useSound('click2.mp3');\n  const [play2] = useSound('loginsound.mp3');\n  const [play3] = useSound('click sound.mp3');\n  const [alertsound] = useSound('alert.mp3');\n  useEffect(() => {\n    let countdownInterval;\n    if (isTimerRunning) {\n      countdownInterval = setInterval(() => {\n        setRemainingTime(previousTime => previousTime - 1);\n      }, 1000);\n    }\n    if (remainingTime === 0) {\n      clearInterval(countdownInterval);\n\n      // take your actions when the 5-minute window is completed\n      alertsound();\n      alert('Practice session completed.  ' + 'accuracy=' + accuracy + '%.' + ' no of key pressed =' + keyCounting + ' RESET TEST TO PRACTICE AGAIN');\n    }\n    return () => clearInterval(countdownInterval);\n  }, [remainingTime, isTimerRunning]);\n  function startTimer() {\n    setIsTimerRunning(true);\n  }\n  function stopTimer() {\n    setIsTimerRunning(false);\n  }\n  function resetalert() {\n    alert('CONGRATULATIONS! your test has been completed' + 'your accuracy is:' + accuracy + '%');\n  }\n  function setter() {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, reset it!'\n    }).then(result => {\n      if (result.isConfirmed) {\n        //on clicking 'yes reset it' button , result.isConfirmed set to true.\n        Swal.fire('Reset done!', 'Your file has been reset.', 'success', setAccuracy(0), setkeyCounting(0), setRemainingTime(60), setwrittenText(''));\n      }\n    });\n  }\n  const changeHandler = event => {\n    //this function get called whenever we will do any changes in textarea i.e onchange event.\n    const {\n      value\n    } = event.target;\n    setwrittenText(value); //whatever i have written in text field. it get stored in 'value'\n    calculateAccuracy(text, value); //function get called and text and value passed\n    setkeyCounting(previousCounting => previousCounting + 1);\n  };\n  const calculateAccuracy = (originalText, writtenText) => {\n    //originalText m text ka value a gaya and written text k textarea m likha hua vakue a gaya.\n    const originalWords = originalText.trim().split(' '); //the split() function depends on the delimiter you provide. In this case, using a space \" \" as the delimiter results in the string being split at each space, producing an array of words.\n    const typedWords = writtenText.trim().split(' '); //the trim() function removes the leading and trailing spaces.\n    const originalLength = originalWords.length;\n    let matchingWords = 0;\n    for (let i = 0; i < originalLength; i++) {\n      if (originalWords[i] === typedWords[i]) {\n        matchingWords++;\n        originalWords[i] = ' ';\n      }\n    }\n    const calculatedAccuracy = matchingWords / originalLength * 100;\n    setAccuracy(calculatedAccuracy.toFixed(3));\n  };\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    style: {\n      borderRadius: '0.5rem'\n    },\n    animate: {\n      opacity: 1\n    },\n    initial: {\n      opacity: 0\n    },\n    transition: {\n      duration: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      whileHover: {\n        scale: 1.1\n      },\n      className: \"container text-center \",\n      style: {\n        backgroundImage: 'url(\"https://images.unsplash.com/photo-1537147347432-676815edd56c?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxleHBsb3JlLWZlZWR8MTc3fHx8ZW58MHx8fHx8&auto=format&fit=crop&w=500&q=60\")',\n        paddingTop: '0.5rem',\n        paddingBottom: '0.5rem',\n        marginTop: '2.5rem',\n        borderRadius: '0.5rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(motion.p, {\n            style: {\n              color: '#ef9273'\n            },\n            children: \"[instruction to type:-Please Look carefully the spaces given between two letters or words, type accordingly for better accuracy]\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(motion.h4, {\n            style: {\n              color: '#ef9273',\n              fontSize: 'bold',\n              textShadow: '1px 1px 2px black, 0 0 25px yellow, 0 0 5px yellow'\n            },\n            id: \"lesson\",\n            children: [\"Lesson  :-\", text]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"input-group\",\n      style: {\n        color: ' #ef9273'\n      },\n      children: /*#__PURE__*/_jsxDEV(motion.textarea, {\n        whileHover: {\n          scale: 1.1\n        },\n        onKeyDown: play3,\n        className: \"form-control \",\n        value: writtenText,\n        onChange: changeHandler,\n        onKeyUp: startTimer,\n        onBlur: stopTimer,\n        \"aria-label\": \"With textarea\",\n        placeholder: \"Start typing .......\",\n        style: {\n          color: '#ef9273',\n          border: '0.1rem solid #ef9273',\n          marginLeft: '5rem',\n          marginRight: '5rem',\n          fontSize: 50,\n          backgroundColor: \"black\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: '#ef9273',\n          marginTop: '1rem'\n        },\n        children: [\"Remaining Time: \", remainingTime, \" seconds | Accuracy: \", accuracy, \"% | No of keys pressed: \", keyCounting, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(motion.button, {\n      whileHover: {\n        scale: 1.1\n      },\n      className: \"btn  btn-danger\",\n      style: {\n        backgroundColor: '#ef9273'\n      },\n      onClick: setter,\n      onFocus: play2,\n      children: \"Reset the Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n}\n_s(Newlesson, \"B0mmNyWYAfy/ozNOSiElanmiSkw=\", false, function () {\n  return [useSound, useSound, useSound, useSound];\n});\n_c = Newlesson;\nvar _c;\n$RefreshReg$(_c, \"Newlesson\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","Footer","motion","useSound","user","jsxDEV","_jsxDEV","Newlesson","_s","text","keyCounting","setkeyCounting","writtenText","setwrittenText","accuracy","setAccuracy","remainingTime","setRemainingTime","isTimerRunning","setIsTimerRunning","play","play2","play3","alertsound","countdownInterval","setInterval","previousTime","clearInterval","alert","startTimer","stopTimer","resetalert","setter","Swal","fire","title","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","changeHandler","event","value","target","calculateAccuracy","previousCounting","originalText","originalWords","trim","split","typedWords","originalLength","length","matchingWords","i","calculatedAccuracy","toFixed","div","style","borderRadius","animate","opacity","initial","transition","duration","children","whileHover","scale","className","backgroundImage","paddingTop","paddingBottom","marginTop","class","p","color","fileName","_jsxFileName","lineNumber","columnNumber","h4","fontSize","textShadow","id","textarea","onKeyDown","onChange","onKeyUp","onBlur","placeholder","border","marginLeft","marginRight","backgroundColor","button","onClick","onFocus","_c","$RefreshReg$"],"sources":["C:/Users/VICKY MISHRA/Desktop/my-touch-typing-app/touch/src/Components/Newlesson.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Navbar from './Navbar';\r\nimport Footer from './Footer';\r\nimport { motion } from 'framer-motion';\r\nimport useSound from 'use-sound';\r\n\r\nimport { user } from './Join';\r\nexport default function Newlesson(){\r\n\r\n    let text='India, a diverse nation of rich heritage, mesmerizes with its vibrant cultures, breathtaking landscapes, and historical wonders like the Taj Mahal. From bustling cities to serene Himalayan peaks, it is a tapestry of traditions and modernity. Experience its spicy cuisine, intricate traditions, and warm hospitality that leave an indelible mark on every traveler.'\r\n    const [keyCounting, setkeyCounting] = useState(0);\r\n    const [writtenText, setwrittenText] = useState('');\r\n    const [accuracy, setAccuracy] = useState(0);\r\n    const [remainingTime, setRemainingTime] = useState(1 * 60); // 1 minutes in seconds\r\n    const [isTimerRunning, setIsTimerRunning] = useState(false);\r\n  \r\n  const [play] = useSound('click2.mp3');\r\n  const [play2] =useSound('loginsound.mp3');\r\n  const [play3] =useSound('click sound.mp3')\r\n  const [alertsound]=useSound('alert.mp3')\r\n  \r\n    useEffect(() => {\r\n      let countdownInterval;\r\n  \r\n      if (isTimerRunning) {\r\n        countdownInterval = setInterval(() => {\r\n          setRemainingTime(previousTime => previousTime - 1);\r\n        }, 1000);\r\n      }\r\n  \r\n      if (remainingTime === 0) {\r\n        clearInterval(countdownInterval);\r\n      \r\n        // take your actions when the 5-minute window is completed\r\n        alertsound()\r\n        alert('Practice session completed.  '+'accuracy='+ accuracy+'%.'+ ' no of key pressed ='+ keyCounting + ' RESET TEST TO PRACTICE AGAIN');\r\n      }\r\n  \r\n      return () => clearInterval(countdownInterval);\r\n    }, [remainingTime, isTimerRunning]);\r\n  \r\n    function startTimer() {\r\n      setIsTimerRunning(true);\r\n    }\r\n  \r\n    function stopTimer() {\r\n      setIsTimerRunning(false);\r\n    }\r\n    function resetalert(){\r\n      alert('CONGRATULATIONS! your test has been completed'+'your accuracy is:'+accuracy+'%')\r\n    }\r\n  \r\n    function setter() {\r\n      \r\n      Swal.fire({\r\n        title: 'Are you sure?',\r\n        text: \"You won't be able to revert this!\",\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Yes, reset it!'\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n          //on clicking 'yes reset it' button , result.isConfirmed set to true.\r\n          Swal.fire(\r\n            'Reset done!',\r\n            'Your file has been reset.',\r\n            'success',\r\n      setAccuracy(0),\r\n      setkeyCounting(0),\r\n      setRemainingTime(60),\r\n      setwrittenText(''),\r\n          )\r\n        }\r\n      })\r\n      \r\n    }\r\n  \r\n    const changeHandler = event => {\r\n      //this function get called whenever we will do any changes in textarea i.e onchange event.\r\n      const { value } = event.target;\r\n      setwrittenText(value);//whatever i have written in text field. it get stored in 'value'\r\n      calculateAccuracy(text, value);//function get called and text and value passed\r\n      setkeyCounting(previousCounting => previousCounting + 1);\r\n    };\r\n  \r\n    const calculateAccuracy = (originalText, writtenText) => {\r\n      //originalText m text ka value a gaya and written text k textarea m likha hua vakue a gaya.\r\n      const originalWords = originalText.trim().split(' ');//the split() function depends on the delimiter you provide. In this case, using a space \" \" as the delimiter results in the string being split at each space, producing an array of words.\r\n      const typedWords = writtenText.trim().split(' ');//the trim() function removes the leading and trailing spaces.\r\n      const originalLength = originalWords.length;\r\n      let matchingWords = 0;\r\n  \r\n      for (let i = 0; i < originalLength; i++) {\r\n        if (originalWords[i] === typedWords[i]) {\r\n          matchingWords++;\r\n          originalWords[i]=' '\r\n        }\r\n      }\r\n  \r\n      const calculatedAccuracy = (matchingWords / originalLength) * 100;\r\n      setAccuracy(calculatedAccuracy.toFixed(3));\r\n    };\r\n\r\n    \r\n    return(\r\n        <motion.div style={{ borderRadius: '0.5rem' \r\n    }} animate={{ opacity: 1 }} initial={{ opacity: 0 }} transition={{ duration: 4 }}>\r\n   \r\n\r\n      <div\r\n        whileHover={{ scale: 1.1 }} className=\"container text-center \" style={{ backgroundImage:\r\n          'url(\"https://images.unsplash.com/photo-1537147347432-676815edd56c?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxleHBsb3JlLWZlZWR8MTc3fHx8ZW58MHx8fHx8&auto=format&fit=crop&w=500&q=60\")',paddingTop: '0.5rem',paddingBottom: '0.5rem',  marginTop: '2.5rem', borderRadius: '0.5rem'}}\r\n      >\r\n        <div class=\"row\">\r\n          <div class=\"col\">\r\n\r\n            <motion.p style={{ color: '#ef9273'}}>\r\n              [instruction to type:-Please Look carefully the spaces given between two letters or words, type accordingly for better accuracy]\r\n            </motion.p>\r\n\r\n            <motion.h4 style={{ color: '#ef9273',fontSize:'bold',textShadow: '1px 1px 2px black, 0 0 25px yellow, 0 0 5px yellow'}} id=\"lesson\">\r\n              Lesson  :-{text}\r\n            </motion.h4>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <br />\r\n\r\n      <div class=\"input-group\" style={{color:' #ef9273'}}>\r\n        <motion.textarea whileHover={{ scale: 1.1 }} onKeyDown={play3} className=\"form-control \" value={writtenText} onChange={changeHandler} onKeyUp={startTimer} onBlur={stopTimer}  aria-label=\"With textarea\" placeholder=\"Start typing .......\" style={{ color:'#ef9273',border: '0.1rem solid #ef9273', marginLeft: '5rem', marginRight: '5rem', fontSize: 50 ,backgroundColor:\"black\"}} ></motion.textarea>\r\n      </div>\r\n\r\n      <b>\r\n        <p style={{ color: '#ef9273', marginTop: '1rem' }}>Remaining Time: {remainingTime} seconds | Accuracy: {accuracy}% | No of keys pressed: {keyCounting} </p>\r\n      </b>\r\n    \r\n\r\n      <motion.button whileHover={{ scale: 1.1 }} className=\"btn  btn-danger\" style={{ backgroundColor: '#ef9273' }} onClick={setter} onFocus={play2}>\r\n       Reset the Test\r\n      </motion.button>\r\n      \r\n    </motion.div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}